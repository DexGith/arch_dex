
site logo
Skip to main content
Stack Overflow

    About
    Products
    For Teams

Home
Questions
AI Assist
Labs
Tags
Challenges
Chat
Articles
Users
Companies
Collectives

        Communities for your favorite technologies. Explore all Collectives

Illustration of upvote icon after it is clicked

Illustration of upvote icon after it is clicked

Practical use of Nested virtualization
Asked 5 years, 9 months ago
Modified 5 years, 8 months ago
Viewed 3k times
4

Hey I've just started using GCP and recently I've come across nested virtualization in GCP. If you can help me with some examples where nested virtualization is necessary to implement in a VM.

    cloudvirtual-machinevirtualization

Share
Improve this question
Follow
edited Dec 9, 2019 at 21:09
Ernesto U's user avatar
Ernesto U
80655 silver badges1414 bronze badges
asked Nov 26, 2019 at 13:40
Apoorv Agnihotri's user avatar
Apoorv Agnihotri
4111 silver badge22 bronze badges
Add a comment
1 Answer
Sorted by:
4

Nested virtualization allows two things:

    Run VMs inside VMs: This is useful if you want run a VM and you are already on a VM(google compute engine)
    Run multiple VMs on the same machine: This is useful to reduce costs, or share identical environment between VMs with minimal effort.

Google itself gives these example use cases:

    Nested virtualization makes it easier for enterprise users to move their on-premises, virtualized workloads to the cloud without having to import and convert VM images. Dev/test and CI/CD workloads that need to validate software in multiple environments are a good match for nested virtualization. Nested virtualization also enables more cost-effective, cloud-based disaster recovery solutions and is ideal for technical training and certification courses where students need identical environments to practice the exercises.

And a real life customer case, where they are concurrently testing an app on multiple virtual android environments on the same compute engine instance.

    This is a huge win for QA and development teams who need native mobile systems, such as Android, for testing/validating mobile apps. Using Google’s new hardware-accelerated nested virtualization, Functionize now enables QA teams to dramatically reduce costs, time-to-test, and the pain of maintaining a complex device inventory. — Tamas Cser, Founder and CEO, Functionize

Share
Improve this answer
Follow
answered Nov 26, 2019 at 13:58
Caner's user avatar
Caner
59.6k3737 gold badges183183 silver badges185185 bronze badges

    Thank you very much. It has given me a much clearer picture of Nested virtualization implementation. – 
    Apoorv Agnihotri
    Commented Nov 26, 2019 at 15:54
    1
    great, if this helped you, you can accept this as an answer – 
    Caner
    Commented Nov 26, 2019 at 16:48
    We use it for our dev/test and education use-cases and also for bursting/auto-scaling from on-prem to GCP, when there's a need. It allows us to run our workloads as-is without re-architecting them. – 
    Sharad
    Commented Sep 12, 2020 at 16:39

Add a comment
Your Answer

  
Sign up or log in
Post as a guest
Name
Email

Required, but never shown

By clicking “Post Your Answer”, you agree to our terms of service and acknowledge you have read our privacy policy.

Start asking to get answers

Find the answer to your question by asking.

Explore related questions

    cloudvirtual-machinevirtualization

See similar questions with these tags.

    The Overflow Blog

Moving the public Stack Overflow sites to the cloud: Part 1

    From punch cards to prompts: a history of how software got better
    Featured on Meta
    New comment UI experiment graduation
    Updated design for the new live activity panel experiment
    Further Experimentation with Comment Reputation Requirements
    Policy: Generative AI (e.g., ChatGPT) is banned

Community activity
Last 1 hr

    Users online activity
    13346 users online

27 questions
28 answers
117 comments

    265 upvotes

Popular tags
c++
c#
python
android
delphi
java

Popular unanswered question
How to filter by User's Email in GQL from property type User in Google Developer Console?
google-app-engine
gql
developer-console
User avatar
lorenc

    127

3,593 days ago
Related
4
Server virtualization: how to avoid, locate and fix bottlenecks?
2
What are the benefits of a Hypervisor VM?
13
Virtualization & Cloud Computing - Where to start?
9
Understanding Virtualization
3
Wastage of resources in Virtualization
17
Why is virtualization needed for cloud computing?
3
Programming considerations for virtualized applications
0
How viable is it to virtualise mutiple servers on the same hardware?
0
Multiseat setup for fun and profit: hypervisors and other choices
1
Full Virtualization or Para Virtualization
Hot Network Questions

    Using size of encrypted content to guess corresponding plaintext
    David Hilbert and the Boltzmann equation
    Integral that simplifies to Leibniz-like series
    "When have you read the police report?"
    Why aneroid barometer capsules are kept under vacuum?
    How long does blood smell for?
    How to apply `tblrtikzbelow` environment to each cell in tabularray?
    Finding the positions of displaced elements in a permutation
    What does it mean to "rotate the knight"?
    MP/M on SimH emulation with 16 terminals
    Why do winding numbers replace two-chains in the proof of Cauchy's theorem?
    Chinese periodic table of elements (元素周期表)
    A fun exercise for his students
    Does Jesus in Matthew 19:11 point to predestination when He says only those to whom it is given can accept this teaching?
    Under what corporate mechanism can the CEO of Intel transfer 10% of the company to the US government?
    A single man to save mankind
    AGPL 3.0 github project collecting sensitive data

more hot questions
Question feed

Stack Overflow

    Questions
    Help
    Chat

Products

    Teams
    Advertising
    Talent

Company

    About
    Press
    Work Here
    Legal
    Privacy Policy
    Terms of Service
    Contact Us
    Cookie Settings
    Cookie Policy

Stack Exchange Network

    Technology
    Culture & recreation
    Life & arts
    Science
    Professional
    Business
    API
    Data

    Blog
    Facebook
    Twitter
    LinkedIn
    Instagram

Site design / logo © 2025 Stack Exchange Inc; user contributions licensed under CC BY-SA . rev 2025.8.27.33321
normal