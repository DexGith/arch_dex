also Ctrl+. in tmux doesn't work. 

I have ctrl+. bound to C-W>

```lua
vim.keymap.set('n', '<C-.>', '<C-w>>', { desc = 'Resize window right', remap = true })
vim.keymap.set('n', '<C-,>', '<C-w><', { desc = 'Resize window left', remap = true })
```

in normal terminal, no tmux. It works fine. 

but once I'm inside a tmux session. the vim keymaps related to the "." and "," do not work. But, other C-<alphabet> work fine.

So, the questions are: 

- How does the terminal send ctrl+, and ctrl+. in the case of alacrity only. 

- How does the terminal send ctrl+, and ctrl+. in the case of tmux running inside alacrity?

- How does Nvim understand what alacrity sends

_ Why is Nvim can't understand what tmux sends?

`cat -v` in alacrity followed by holding ctrl+. outputs "." for ctrl+, it outputs ","....... `cat -v` in tmux a session outputs the same thing.

in my .tmux.conf I have 

```bash
# --- [0] CORE SETTINGS ---
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
set-option -g history-limit 10000
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g mouse on
set-option -s escape-time 0
set-option -g default-terminal "tmux-256color"
set-window-option -g xterm-keys on
set-option -ag terminal-overrides ",xterm-256color:RGB"
```

so `set-window-option -g xterm-keys on` so in tmux I'm using the xterm-keys standard right? in tmux when I hit ctrl+. in nvim. nvim only sees "." because in neo-tree I did that on a folder and it sat it as the working dir in nvim. 

So conclusion when nvim is running inside a tmux session and a user hit ctrl+. nvim seeds it as just "." ..... this is the default standard right?

thoughts ? what's causing the problem? and how do I solve it ?