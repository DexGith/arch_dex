# /etc/keyd/default.conf

# my hardware IDs
[ids]

248a:00da
0001:0001

# me main most used or planed to be used keys on the blue keyboard
[main]

# ------ Keys -------

capslock = overload(extend, escape)

# homepage = overload(extend_homepage, escape)

# calc = overload(extend_calc, escape)

# mail = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/nothing/alacrity_F2_tmuxSeachMove_withTmuxSesionizer.sh)

# documents = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh alacritty)

nextsong = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh alacritty --working-directory /home/dex)

previoussong = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh alacritty --working-directory /home/dex)

playpause = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh alacritty --working-directory /home/dex)

escape = overload(hyper, escape)


# END------ Keys END-------


# --------------- Capslock ----------------

[extend]


# with swap we are sacrifcing these buttons but maybe we can do like fake_all with like 
# almost full button access
dot = swap(fake_control)
s = swap(fake_control)
w = swap(fake_meta)
q = leftshift
leftbrace = swap(fake_shift)
# space = leftalt
space = overload(alt,space)

# --- NEW POWER-KEY 'Q' ---
# This is a huge upgrade.
# Hold capslock + HOLD 'q' -> acts as Alt key.
# Hold capslock + TAP 'q' -> sends Escape.
# d = overload(alt, escape)

1 = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/nothing/rofi_smart_window_switcher_works_with_Mod4_grave.sh)

2 = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/nothing/rofi_win_w_current_desktop_windows.sh)

3 = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh dolphin)

4 = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh zsh -i -c 'rofi -show run')

6 = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/nothing/rofi_alt_per_tab_scuffed.bak)

# make window always on top, using the window manager
f1 = M-f

f2 = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/nothing/sticky_window_toggle)

f3 = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh xdotool mousemove 900 600)

minus = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh xdotool mousemove 900 600)

f4 = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh xdotool mousemove 2600 400)

equal = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh xdotool mousemove 2600 400)

# --- YOUR NAVIGATION (PRESERVED & ENHANCED) ---
# Your core vim-style arrow keys are preserved.
h = left
j = down
k = up
l = right

# I've adopted the more standard 'u' and 'o' for line navigation from the Extend example.
# This frees up your number keys.
u = C-z
g = pageup
v = pagedown
r = C-y
c = M-c
5 = A-f2
y = C-c
p = C-v
0 = home
e = end
a = home

# --- YOUR WORD-WISE NAVIGATION (PRESERVED) ---
# These are great, and they don't conflict. They now work with the new home row mods!
# e.g., hold capslock+s+b to do Shift+Ctrl+Left (select word).
f = C-right
b = C-left

# --- YOUR MACRO (MOVED & IMPROVED) ---
# Since 'd' is now the Meta key, I've moved your "select and delete" macro to 'g'.
# It's right next to your home row and easy to press.
# d = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/keyd/keyd_select_line_delete_end_of_line.sh)

o = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/keyd/keyd_next_line.sh)

# t = command(machinectl shell dex@ /usr/bin//usr/bin/alacritty --working-directory /home/dex)
t = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh alacritty --working-directory /home/dex)



o = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/keyd/keyd_next_line.sh)

# --- POWERFUL NEW KEYS FROM THE EXTEND LAYER ---
# These are huge quality-of-life improvements.
slash = delete
semicolon = backspace
apostrophe = C-a
comma = escape
# x = delete
d = delete
m = enter
i = tab
n = space
# grave = capslock # wow grave works

x = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/keyd/keyd_select_line_delete.sh)



# To let you toggle the *real* Caps Lock function, we'll map it to 'c'.
# Hold capslock and tap 'c' to turn on actual CAPS LOCK.
rightbrace = capslock

# this is for sxhkd, to reload it do pkill -USR1 -x sxhkd and run it again I think. 
# you can find the config in # ~/.config/sxhkd/sxhkdrc
# this sxhkd is like you know c+x c+f you know it's a like you hit
# and it waits and listens for the next key then depending on the
# next key it will do something. I wonder if I can trigger it with
# other tools that are not keyd like xbindkeys... probably.
# t = M-A-S-c 

# w = M-A-S-c 

# space = swap(vim_mode)
tab = swap(space2)
grave = swap(space3)


# !!!!!!!!! I HAVE space = swap(vim_mode) BUT WHATA ABOUT layer(hypr) we can test like t = layer(hypr) !!!!!!!!
# --- SPECIAL LAYER KEY ---
# This is the new way to access your "hyper" shortcuts.
# Hold CapsLock and press 'e' to temporarily switch to the [hyper] layer.
# t = layer(hyper)

# !!!!!!!!! I HAVE space = swap(vim_mode) BUT WHATA ABOUT layer(hypr) we can test like t = layer(hypr) !!!!!!!!

# --- OTHER BINDINGS PRESERVED ---
# z = C-z
# x = delete      # This is fine, but redundant since ';' is now also delete. Your choice.
# v = C-v
# y = C-c       

[extend+control]

k = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/keyd/keyd_select_line_delete_end_of_line.sh)

# this is logical but `k` in here is emacs 
# a = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/keyd/keyd_select_line_delete_home_of_line.sh)

u = m-a-s-c

[extend+shift]

o = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/keyd/keyd_next_line_up.sh)

# 2 = @
# doesn't work 3 = # even if you do  3 = # it's a physical keyboard issue, maybe with no holding q or hold capslock+shfit
# 4 = $
# e = end
# g = pagedown
# x = backspace
d = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/keyd/keyd_select_line_delete.sh)

[extend+alt]


# Your core vim-style arrow keys are preserved.
h = A-left
j = A-down
k = A-up
l = A-right

# I've adopted the more standard 'u' and 'o' for line navigation from the Extend example.
# This frees up your number keys.
u = M-A-S-c
g = pagedown
v = pageup
r = C-y
y = C-c
# p = C-v
0 = home
e = end
a = C-a
b = C-b

p = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/nothing/sending_theHomeDir_symbole.sh)



# windows manipulation

# close window
# c = M-c

# pin window to all distops
o = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/nothing/sticky_window_toggle)




# temrinal

# open terminal with tmux-sesionizer C-f for searching through tmux sessions
t = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/nothing/alacrity_F2_tmuxSeachMove_withTmuxSesionizer.sh)



# --- YOUR WORD-WISE NAVIGATION (PRESERVED) ---
# These are great, and they don't conflict. They now work with the new home row mods!
# e.g., hold capslock+s+b to do Shift+Ctrl+Left (select word).
# f = C-right
# b = C-left


d = C-delete
slash = C-delete
backspace = C-backspace
semicolon = C-backspace
# comma = escape
# n = space
# m = enter
# dot = tab



# END--------------- Capslock END----------------




# ----- [space2] -----

# capslock + tab (1 tap) = [space2]
[space2]

q = leftshift
tab = swap(extend)

t = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/nothing/alacrity_F2_tmuxSeachMove_withTmuxSesionizer.sh)


[space2+shift]

[space2+control]


# END-------- [space2] END----





# ----- [space3] -----

# capslock + grave (1 tap) = [space3]
[space3]

q = leftshift
grave = swap(extend)

[space3+shift]

[space3+control]


# END-------- [space3] END----





# -------- Side note aobut :c] -----
# if you make it [vim_mode:C] it's kinda wanky with scripts but [vim_mod:C] probably has other advantages ? i'm not sure... maybe the ability to repeat keys or whatever
# o = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh xdotool key Home)
# I still don't know what to put here for this 3rd layer
# idk aobut this one


# END-------- Side note aobut :c] END-----


# ----------- ESCAPE ----------

[hyper]

w = M-A-S-c 

# END----------- ESCAPE END----------



# -------- Fake Control due to keyboard limitations ----- 




[fake_control]

dot = swap(extend)
s = swap(extend)

v = pagedown

k = command(sudo -u dex -H /home/dex/scripts/dex_session_launcher.sh /home/dex/scripts/ddesk/keyd/keyd_select_line_delete_end_of_line.sh)


[fake_meta]

# Katakana = xdotool click 5
# xdotool click 5 = scroll down
d = katakana

# Hiragana = xdotool click 7
# xdotool click 7 = scroll right
f = hiragana

# katakanahiragana = xdotool click 6 
# xdotool click 6 = scroll left
s = katakanahiragana

# XF86TouchpadToggle = xdotool click 4 
# xdotool click 4 = scroll up
e = zenkakuhankaku




# --- Mouse Movement with xdotool ---
# move_relative <x> <y>

# xdotool mousemove_relative -- -20 0
h = yen

# xdotool mousemove_relative -- 0 20
j = muhenkan

# xdotool mousemove_relative -- 0 -20
k = kpjpcomma

# xdotool mousemove_relative -- 20 0
l = ro



# screenshot 
y = sysrq


# buttons

b = leftmouse
n = rightmouse
m = middlemouse

minus =  mouseback
equal =  mouseforward

0 =  mouse2
9 =  mouse1





[fake_shift]



